version: "3"

vars:
  APP: invoiceling
  BIN_DIR: ./bin
  WINDOWS_OS: windows
  LINUX_OS: linux
  MAC_OS: darwin
  ARCH_64: amd64
  ARCH_ARM: arm64

tasks:
  cleanup:
    desc: "cleanup init files"
    cmds:
      - rm -Rf client config invoice pdf

  build:
    desc: "build the compiled binary"
    cmds:
      - go build -o ./bin/{{.APP}} ./cmd/cli/main.go

  build-darwin:
    desc: "build macos binary"
    cmds:
      - GOOS=darwin GOARCH=amd64 go build -o ./bin/{{.APP}} ./cmd/cli/main.go
      - tar -czvf ./bin/{{.APP}}.darwin-amd64.tar.gz ./bin/{{.APP}}
      - GOOS=darwin GOARCH=arm64 go build -o ./bin/{{.APP}} ./cmd/cli/main.go
      - tar -czvf ./bin/{{.APP}}.darwin-arm64.tar.gz ./bin/{{.APP}}

  build-linux:
    desc: "build linux binary"
    cmds:
      - GOOS=linux GOARCH=amd64 go build -o ./bin/{{.APP}} ./cmd/cli/main.go
      - tar -czvf ./bin/{{.APP}}.linux-amd64.tar.gz ./bin/{{.APP}}

  build-windows:
    desc: "build windows binary"
    cmds:
      - GOOS=windows GOARCH=amd64 go build -o ./bin/{{.APP}} ./cmd/cli/main.go
      - tar -czvf ./bin/{{.APP}}.windows-amd64.tar.gz ./bin/{{.APP}}

  test:
    desc: "run all unit tests"
    cmds:
      - go test -v ./...

  lint:
    desc: "lint the code"
    cmds:
      - golangci-lint run

  generate-pdf:
    desc: "generate default pdf"
    cmds:
      - go run ./main.go pdf
